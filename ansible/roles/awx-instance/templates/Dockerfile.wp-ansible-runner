FROM docker-registry.default.svc:5000/{{ ansible_oc_namespace }}/{{ mgmt_image_name }}:latest
FROM docker-registry.default.svc:5000/{{ ansible_oc_namespace }}/{{ awx_ansible_runner_base_image_name }}:latest

RUN yum -y update

RUN rm -f /etc/yum.repos.d/epel*
RUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

RUN yum -y install http://rpms.remirepo.net/enterprise/remi-release-8.rpm

RUN dnf module enable php:remi-7.4 -y

RUN yum -y install yum-plugin-copr && yum -y copr enable copart/restic

RUN yum -y install php-cli php-mysql python3 restic jq mysql pwgen perl

RUN pip3 install awscli

RUN pip3 install mitogen==0.2.9
RUN mkdir /etc/ansible;                                                         \
    ( echo '[defaults]';                                                        \
      echo 'strategy_plugins = /usr/local/lib/python3.6/site-packages/ansible_mitogen/plugins/strategy') \
    > /etc/ansible/ansible.cfg

ARG RUNNER_PATCH_URLS=""
ARG ANSIBLE_PATCH_URLS=""
RUN set -o pipefail; set -e -x; yum -y install patch;                       \
    for url in $RUNNER_PATCH_URLS; do                                       \
        curl --fail $url |                                                  \
            patch -d /usr/lib/python3.6/site-packages/ansible_runner;       \
    done;                                                                   \
    for url in $ANSIBLE_PATCH_URLS; do                                      \
        curl --fail $url |                                                  \
            patch -d /usr/local/lib/python3.6/site-packages/ansible -p3 ;   \
    done;                                                                   \
    yum -y history undo patch

COPY --from=0 /usr/local/bin/wp /usr/local/bin/
COPY --from=0 /usr/local/bin/new-wp-site /usr/local/bin/new-wp-site
RUN mkdir /runner/.wp-cli
COPY --from=0 /var/www/.wp-cli /runner/.wp-cli
COPY --from=0 /wp /wp

# We want to run as the credentials we have been using
# historically in the mgmt image, and are therefore still in use
# e.g. for file ownership on NFS.
RUN groupdel $(getent group {{ awx_unix_credentials.uid }} |cut -d: -f1)
RUN groupadd -g {{ awx_unix_credentials.gid }} {{ awx_unix_credentials.group }}
RUN useradd -u {{ awx_unix_credentials.uid }} -g {{ awx_unix_credentials.gid }} -d /runner {{ awx_unix_credentials.user }}
RUN chgrp -R {{ awx_unix_credentials.group }} /runner

# Add dependencies
RUN set -e -x; mkdir /tmp/install; \
    curl --fail -o /tmp/install/requirements.yml https://raw.githubusercontent.com/epfl-si/wp-ops/master/ansible/requirements.yml ; \
    ansible-galaxy install -i -r /tmp/install/requirements.yml ; \
    ansible-galaxy collection install -i -r /tmp/install/requirements.yml ; \
    rm /tmp/install/requirements.yml

# Activate cache in wordpress_plugin.py
ENV WPSIBLE_WPCLI_CACHE_DIR=/tmp/wordpress_plugin-cache
