- include_vars: ../../../vars/image-vars.yml
  tags: always

- include_vars: k8s-vars.yml
  tags: always

- name: "Pull upstream awx image into {{ awx_base_image_mirrored_to }}"
  delegate_to: localhost
  openshift_imagestream:
    metadata:
      name: awx
      namespace: "{{ ansible_oc_namespace }}"
    from: "{{ awx_base_image_mirrored_from }}"
    tag: "{{ awx_version }}"

- name: "Patch {{ awx_base_image_mirrored_to }} into {{ awx_image_name }}"
  register: _awx_buildconfig
  delegate_to: localhost
  openshift_imagestream:
    tag: "{{ awx_version }}"
    metadata:
      name: "{{ awx_image_name }}"
      namespace: "{{ ansible_oc_namespace }}"
    dockerfile: |
       FROM {{ awx_base_image_mirrored_to }}

       USER 0
       # Nothing here for now...

       USER 1000
  tags: awx.build.awx

- name: "Rebuild {{ awx_image_name }} now"
  when: _awx_buildconfig is changed
  shell: "oc -n {{ awx_build_namespace }} start-build --wait {{ awx_image_name }}"
  delegate_to: localhost
  tags: awx.build.awx
  notify: Restart AWX pod

- name: "Patch {{ awx_base_image_mirrored_to }} into {{ awx_receptor_image_name }}"
  register: _awx_receptor_buildconfig
  delegate_to: localhost
  openshift_imagestream:
    tag: "{{ awx_receptor_version }}"
    metadata:
      name: "{{ awx_receptor_image_name }}"
      namespace: "{{ ansible_oc_namespace }}"
    dockerfile: |
       FROM {{ awx_base_image_mirrored_to }}

       USER 0
       RUN pip3 install ansible ansible-runner
       RUN set -e -x; \
           {{ shellmacros_poor_mans_curl_oneline }} ; \
           install_it ; \
           download_github_release ansible/receptor \
             '{{ awx_receptor_version }}' \
             linux_amd64.tar.gz \
          | tar -C/usr/local/bin -zxvv receptor
       USER 1000
  tags: awx.build.receptor

- name: "Rebuild {{ awx_receptor_image_name }} now"
  when: _awx_receptor_buildconfig is changed
  shell: "oc -n {{ awx_build_namespace }} start-build --wait {{ awx_receptor_image_name }}"
  delegate_to: localhost
  tags: awx.build.receptor
  notify: Restart AWX pod

- name: "Mirror upstream {{ awx_ee_base_image_mirrored_from }}"
  delegate_to: localhost
  openshift_imagestream:
    metadata:
      name: awx-ee
      namespace: "{{ ansible_oc_namespace }}"
    from: "{{ awx_ee_base_image_mirrored_from }}"
    tag: "{{ awx_version }}"

- name: "Patch Ansible assets into {{ awx_ee_image_name }}"
  delegate_to: localhost
  openshift_imagestream:
    metadata:
      name: "{{ awx_ee_image_name }}"
      namespace: "{{ ansible_oc_namespace }}"
    dockerfile: |
       FROM {{ awx_ee_base_image_mirrored_to }}

       USER 0
       RUN set -e -x; {{ shellmacros_poor_mans_curl_oneline }} ; \
           poorcurl {{ awx_ee_busybox_static_download_url }} > /usr/local/bin/busybox; \
           chmod 755 /usr/local/bin/busybox; \
           download_github_release restic/restic \
             'restic {{ awx_ee_restic_version }}' \
             'restic_{{ awx_ee_restic_version }}_linux_amd64.bz2' \
             | busybox bzip2 -dc \
             > /usr/local/bin/restic ; \
          chmod 755 /usr/local/bin/restic
       USER 1000
       RUN {{ shellmacros_poor_mans_curl_oneline }} ; \
           poorcurl {{ awx_ee_ansible_requirements_from_url }} > requirements.yml
       RUN set -e -x ; \
           export HOME=/runner ; \
           ansible-galaxy role install --force -i -r requirements.yml ; \
           ansible-galaxy collection install --force -i -r requirements.yml ; \
           rm -rf .ansible/tmp; \
           mkdir .ansible/tmp; \
           chmod 0770 .ansible/tmp
    tag: "{{ awx_version }}"
  register: _awx_ee_buildconfig

- name: "Rebuild {{ awx_ee_image_name }} now"
  when: _awx_ee_buildconfig is changed
  shell: "oc -n {{ awx_build_namespace }} start-build --wait {{ awx_ee_image_name }}"
  delegate_to: localhost
  tags: awx.build.ee
  # Pods that use this image are ephemeral; thus, there is no need to `notify: Restart AWX pod`
