- name: ServiceAccount/restore-sites-prod-to-test
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: restore-sites-prod-to-test
        namespace: "{{ inventory_namespace }}"

- name: Role/restore-sites-prod-to-test
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: restore-sites-prod-to-test
        namespace: "{{ inventory_namespace }}"
      rules:
        - apiGroups: ['networking.k8s.io']
          resources:
            - ingresses
          verbs: ['get']
        - apiGroups: ['k8s.mariadb.com']
          resources:
            - restores
          verbs: ['create', 'get', 'watch', 'delete', 'list']
        - apiGroups: ['apps']
          resources:
            - deployments
          verbs: ['get', 'patch']

- name: RoleBinding/restore-sites-prod-to-test
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: restore-sites-prod-to-test
        namespace: "{{ inventory_namespace }}"
      subjects:
        - kind: ServiceAccount
          name: restore-sites-prod-to-test
          namespace: "{{ inventory_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: restore-sites-prod-to-test

- name: CronJob/restore-sites-from-prod-to-test
  kubernetes.core.k8s:
    definition:
      apiVersion: batch/v1
      kind: CronJob
      metadata:
        name: restore-sites-from-prod-to-test
        namespace: "{{ inventory_namespace }}"
      spec:
        schedule: "17 5 * * *"
        timeZone: "Europe/Zurich"
        jobTemplate:
          spec:
            template:
              metadata:
                labels:
                  app: restore-sites-from-prod-to-test-cron
              spec:
                serviceAccountName: restore-sites-prod-to-test
                containers:
                  - name: restore-sites-from-prod-to-test-cron
                    image: "{{ ansible_quay_hostname }}/{{ quay_organization }}/wp-s3:feature-wpsites-backup-002"
                    command: ["/bin/bash"]
                    args: ["/restore_sites_prod_to_test.sh"]
                    resources:
                        requests:
                          cpu: "50m"
                          memory: "512Mi"
                        limits:
                          memory: "512Mi"
                imagePullSecrets:
                  - name: "{{ quay_puller_secret_name }}"
                restartPolicy: OnFailure
        concurrencyPolicy: Forbid
