- include_vars: image-vars.yml
  tags: always

- when: _rbac_managed   # See this variable in main.yml
  name: ServiceAccount/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      automountServiceAccountToken: false


- when: _rbac_managed
  name: RoleBinding/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      subjects:
      - kind: ServiceAccount
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: wp-nginx


- when: _rbac_managed
  name: Role/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      rules:
        # Required for `--namespace` flag: the controller wants to read its own namespace.
        - apiGroups: ['']
          resources:
          - namespaces
          verbs: ['get']
        # Copied and trimmed down from `role/rke2-ingress-nginx` in namespace `kube-system`:
        - apiGroups: ['']
          resources:
          - pods
          - services
          verbs: ['get', 'list', 'watch']
        - apiGroups: ['networking.k8s.io']
          resources:
          - ingresses
          - ingressclasses
          verbs: ['get', 'list', 'watch']
        - apiGroups: ['networking.k8s.io']
          resources:
          - ingresses/status
          verbs: ['update']
        - apiGroups: ['']
          resources:
          - events
          verbs: ['create', 'patch']
        - apiGroups: ['discovery.k8s.io']
          resources:
          - endpointslices
          verbs: ['get', 'list', 'watch']
        # Added by hand to stop the controller from whining:
        - apiGroups: ['']
          resources:
          - configmaps
          resourceNames:
          - wp-nginx
          verbs: ['get', 'watch']


- when: _rbac_managed
  name: ClusterRoleBinding/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      subjects:
      - kind: ServiceAccount
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: wp-nginx


- when: _rbac_managed
  name: ClusterRole/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      rules:
        # Copied and trimmed down from `clusterrole/rke2-ingress-nginx` in namespace `kube-system`:
        - apiGroups: ['']
          resources:
          - configmaps
          - endpoints
          - pods
          - secrets
          verbs: ['list', 'watch']
        - apiGroups: ['networking.k8s.io']
          resources:
          - ingressclasses
          verbs: ['get', 'list', 'watch']


- name: ConfigMap/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      data:
        allow-snippet-annotations: "true"
        # Uncomment the next four lines to embug the nginx configuration
        # (see also similar comments elsewhere in the file):
        # nginx.tmpl: >-
        #   {{ lookup("file", "../../../../docker/wordpress-nginx/nginx.tmpl") }}
        # wordpress_fastcgi.conf: >-
        #  {{ lookup("file", "../../../../docker/wordpress-nginx/wordpress_fastcgi.conf") }}


- name: Deployment/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: wp-nginx
        strategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: wp-nginx
          spec:
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        app: wp-nginx
                    topologyKey: kubernetes.io/hostname
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: wp-nginx
                      topologyKey: topology.kubernetes.io/zone
            serviceAccountName: wp-nginx
            automountServiceAccountToken: false
            containers:
              - name: nginx
                image: quay-its.epfl.ch/svc0041/wp-nginx:2025-023
                command:
                  - /nginx-ingress-controller
                  - --disable-leader-election
                  - --controller-class=epfl.ch/ingress-wordpress
                  - --watch-namespace=$(POD_NAMESPACE)
                  - --configmap=$(POD_NAMESPACE)/wp-nginx
                  - --watch-ingress-without-class=false
                  - --http-port=8000
                  - --https-port=8443
                resources:
                  limits: "{{ _limits_for_prod_only }}"
                  requests:
                    cpu: '{{ _request_cpu }}'
                    memory: '{{ _request_ram }}'
                ports:
                  - containerPort: 8000
                    protocol: TCP
                  - name: php-fpm-metrics
                    containerPort: 9253
                    protocol: TCP
                  - name: ngnix-metrics
                    containerPort: 9145
                    protocol: TCP  
                volumeMounts:
                  - name: wp-data
                    mountPath: /wp-data/
                    readOnly: true
                  - name: fpm-socket
                    mountPath: /run/php-fpm
                  - name: kube-api-access
                    mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                    readOnly: true
                  # Uncomment the next three lines to embug the nginx configuration
                  # (see also similar comments elsewhere in the file):
                  # - name: wp-nginx
                  #   mountPath: /etc/nginx/template
                  #   readOnly: true
                env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.name
                  - name: POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                  - name: MENU_API_HOST
                    value: "menu-api"
              - name: php
                image: quay-its.epfl.ch/svc0041/wp-php:2025-023
                resources:
                  limits: "{{ _limits_for_prod_only }}"
                  requests:
                    cpu: '{{ _request_cpu }}'
                    memory: '{{ _request_ram }}'
                volumeMounts:
                  - name: wp-data
                    mountPath: /wp-data/
                  - name: fpm-socket
                    mountPath: /run/php-fpm
              - name: php-fpm-exporter
                image: quay-its.epfl.ch/svc0041/php-fpm_exporter:2
                resources:
                  requests:
                    cpu: '{{ _request_cpu_de_minimis }}'
                    memory: '{{ _request_ram_de_minimis }}'
                  # This fits under the default (LimitRange-imposed) limits
                  # even for production; so we don't need `limits:` here.
                args:
                  - --phpfpm.fix-process-count
                  - --log.level
                  - debug
            imagePullSecrets:
              - name: "{{ image_pull_secret_name }}"
            restartPolicy: Always
            volumes:
              - name: fpm-socket
                emptyDir: {}
              - name: wp-data
                persistentVolumeClaim:
                  claimName: wordpress-data
              # Uncomment the next three lines to embug the nginx configuration
              # (see also similar comments elsewhere in the file):
              # - name: wp-nginx
              #   configMap:
              #     name: wp-nginx
              - name: kube-api-access
                projected:
                  defaultMode: 420
                  sources:
                  - serviceAccountToken:
                      expirationSeconds: 3600
                      path: token
                  - configMap:
                      items:
                      - key: ca.crt
                        path: ca.crt
                      name: kube-root-ca.crt
                  - downwardAPI:
                      items:
                      - fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.namespace
                        path: namespace
  vars:
    _request_cpu: >-
      {{ "1" if inventory_deployment_stage == "production"
      else _request_cpu_de_minimis }}
    _request_ram: >-
      {{ "1Gi" if inventory_deployment_stage == "production"
      else _request_ram_de_minimis }}
    _limits_for_prod_only: >-
      {{ {} if inventory_deployment_stage != "production"
         else { "cpu": _request_cpu, "memory": _request_ram } }}
    _request_cpu_de_minimis: "20m"
    _request_ram_de_minimis: "256Mi"

- name: PodDisruptionBudget/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      spec:
        minAvailable: 1
        selector:
          matchLabels:
            app: wp-nginx

- name: PodMonitor/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: monitoring.coreos.com/v1
      kind: PodMonitor
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      spec:
        selector:
          matchLabels:
            app: wp-nginx
        podMetricsEndpoints:
          - port: php-fpm-metrics

- name: Service/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
        labels:
          app: wp-nginx
        annotations:
          authors: isas-fsd
      spec:
        ports:
        - name: "80"
          port: 80
          protocol: TCP
          targetPort: 8000
        selector:
          app: wp-nginx
        type: ClusterIP


- when: _routing_managed
  name: Ingress/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      spec:
        rules:
          - host: "wpn.fsd.team"
            http:
              paths:
                - pathType: Prefix
                  path: /
                  backend:
                    service:
                      name: wp-nginx
                      port:
                        number: 80
