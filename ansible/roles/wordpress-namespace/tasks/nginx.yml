- when: _rbac_managed   # See this variable in main.yml
  name: ServiceAccount/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      automountServiceAccountToken: false


- when: _rbac_managed
  name: RoleBinding/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      subjects:
      - kind: ServiceAccount
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: wp-nginx


- when: _rbac_managed
  name: Role/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      rules:
        # Required for `--namespace` flag: the controller wants to read its own namespace.
        - apiGroups: ['']
          resources:
          - namespaces
          verbs: ['get']
        # Copied and trimmed down from `role/rke2-ingress-nginx` in namespace `kube-system`:
        - apiGroups: ['']
          resources:
          - pods
          - services
          verbs: ['get', 'list', 'watch']
        - apiGroups: ['networking.k8s.io']
          resources:
          - ingresses
          - ingressclasses
          verbs: ['get', 'list', 'watch']
        - apiGroups: ['networking.k8s.io']
          resources:
          - ingresses/status
          verbs: ['update']
        - apiGroups: ['']
          resources:
          - events
          verbs: ['create', 'patch']
        - apiGroups: ['discovery.k8s.io']
          resources:
          - endpointslices
          verbs: ['get', 'list', 'watch']
        # Added by hand to stop the controller from whining:
        - apiGroups: ['']
          resources:
          - configmaps
          resourceNames:
          - wp-nginx
          verbs: ['get', 'watch']


- when: _rbac_managed
  name: ClusterRoleBinding/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      subjects:
      - kind: ServiceAccount
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: wp-nginx


- when: _rbac_managed
  name: ClusterRole/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      rules:
        # Copied and trimmed down from `clusterrole/rke2-ingress-nginx` in namespace `kube-system`:
        - apiGroups: ['']
          resources:
          - configmaps
          - endpoints
          - pods
          - secrets
          verbs: ['list', 'watch']
        - apiGroups: ['networking.k8s.io']
          resources:
          - ingressclasses
          verbs: ['get', 'list', 'watch']


- name: ConfigMap/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      data:
        allow-snippet-annotations: "true"
        # Uncomment the next four lines to embug the nginx configuration
        # (see also similar comments elsewhere in the file):
        # nginx.tmpl: >-
        #   {{ lookup("file", "../../../../docker/wordpress-nginx/nginx.tmpl") }}
        # wordpress_fastcgi.conf: >-
        #  {{ lookup("file", "../../../../docker/wordpress-nginx/wordpress_fastcgi.conf") }}


- name: Deployment/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: wp-nginx
        strategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: wp-nginx
          spec:
            serviceAccountName: wp-nginx
            automountServiceAccountToken: false
            containers:
              - name: nginx
                image: quay-its.epfl.ch/svc0041/wpn-nginx:wpn-nginx-php-32
                args:
                  - /nginx-ingress-controller
                  - --disable-leader-election
                  - --controller-class=epfl.ch/ingress-wordpress
                  - --watch-namespace=$(POD_NAMESPACE)
                  - --configmap=$(POD_NAMESPACE)/wp-nginx
                  - --watch-ingress-without-class=false
                ports:
                  - containerPort: 8000
                    protocol: TCP
                volumeMounts:
                  - name: wp-uploads
                    mountPath: /data/
                    subPath: wp-uploads
                    readOnly: true
                  - name: fpm-socket
                    mountPath: /run/php-fpm
                  - name: kube-api-access
                    mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                    readOnly: true
                  # Uncomment the next three lines to embug the nginx configuration
                  # (see also similar comments elsewhere in the file):
                  # - name: wp-nginx
                  #   mountPath: /etc/nginx/template
                  #   readOnly: true
                env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.name
                  - name: POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
              - name: php
                image: quay-its.epfl.ch/svc0041/wpn-php:wp66-032
                volumeMounts:
                  - name: wp-uploads
                    mountPath: /data/
                    subPath: wp-uploads
                  - name: fpm-socket
                    mountPath: /run/php-fpm
            imagePullSecrets:
              - name: svc0041-rke2-puller-pull-secret
            restartPolicy: Always
            volumes:
              - name: fpm-socket
                emptyDir: {}
              - name: wp-uploads
                persistentVolumeClaim:
                  claimName: wp-uploads
              # Uncomment the next three lines to embug the nginx configuration
              # (see also similar comments elsewhere in the file):
              # - name: wp-nginx
              #   configMap:
              #     name: wp-nginx
              - name: kube-api-access
                projected:
                  defaultMode: 420
                  sources:
                  - serviceAccountToken:
                      expirationSeconds: 3600
                      path: token
                  - configMap:
                      items:
                      - key: ca.crt
                        path: ca.crt
                      name: kube-root-ca.crt
                  - downwardAPI:
                      items:
                      - fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.namespace
                        path: namespace


- name: Service/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
        labels:
          app: wp-nginx
        annotations:
          authors: isas-fsd
      spec:
        ports:
        - name: "80"
          port: 80
          protocol: TCP
          targetPort: 8000
        selector:
          app: wp-nginx
        type: ClusterIP


- name: Ingress/wp-nginx
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: wp-nginx
        namespace: "{{ inventory_namespace }}"
      spec:
        rules:
          - host: "wpn.fsd.team"
            http:
              paths:
                - pathType: Prefix
                  path: /
                  backend:
                    service:
                      name: wp-nginx
                      port:
                        number: 80



- name: PersistentVolumeClaim/wp-uploads
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: wp-uploads
        namespace: "{{ inventory_namespace }}"
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 2Gi
