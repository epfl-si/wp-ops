- include_vars: varnish-vars.yml
  tags: always

- name: Varnish collectd.conf
  openshift:
    state: latest
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: varnish-varnish-collectd
      namespace: "{{ openshift_namespace }}"
    data:
      collectd.conf: |
        FQDNLookup false
        CollectInternalStats true
        WriteQueueLimitLow  5000
        WriteQueueLimitHigh 5000
        LoadPlugin log_logstash
        <Plugin log_logstash>
        	LogLevel info
        	File stdout
        </Plugin>
        LoadPlugin unixsock
        <Plugin unixsock>
        	DeleteSocket true
        	SocketGroup "nogroup"
        </Plugin>
        LoadPlugin write_prometheus
        Hostname "varnish"
        Interval 10
        LoadPlugin "varnish"
        <Plugin "varnish">
            <Instance "varnishd">
                CollectBackend     true
                CollectBan         false
                CollectCache       true
                CollectConnections true
                CollectESI         false
                CollectFetch       true
                CollectHCB         false
                CollectObjects     true
                CollectSession     true
                CollectSHM         true
                CollectSMS         false
                CollectStruct      true
                CollectTotals      true
                CollectUptime      true
                CollectVCL         false
                CollectVSM         true
                CollectWorkers     true
            </Instance>
        </Plugin>

- name: "Pull upstream varnish image into {{ varnish_image_mirrored_to }}"
  delegate_to: localhost
  openshift_imagestream:
    metadata:
      name: varnish
      namespace: "{{ openshift_namespace }}"
    from: "{{ varnish_image_mirrored_from }}"
    tag: >-
      {{ varnish_image_mirrored_from | regex_replace("^.*:", "") }}

- name: Varnish varnishkafka.conf
  openshift:
    state: latest
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: varnish-varnish-varnishkafka
      namespace: "{{ openshift_namespace }}"
    data:
      varnishkafka.conf: "{{ lookup('template', 'varnishkafka.conf') }}"

- name: Varnish StatefulSet
  delegate_to: localhost
  openshift:
    state: latest
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: varnish-varnish
      namespace: "{{ openshift_namespace }}"
    spec:
      podManagementPolicy: OrderedReady
      selector:
        matchLabels:
          app: varnish-varnish
      serviceName: varnish-varnish
      replicas: 2
      template:
        metadata:
          labels:
            app: varnish-varnish
        spec:
          containers:
          - command:
            - varnishd
            - -a :8080
            - -F
            - -f
            - /etc/varnish/default.vcl
            - -n
            - varnishd
            - -s
            - malloc,256m
            image: "{{ varnish_image_mirrored_to }}"
            imagePullPolicy: IfNotPresent
            name: varnish
            ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/varnish
              name: varnish-config
            - mountPath: /var/lib/varnish
              name: varnish-runtime
          - command:
            - collectd
            - -f
            - -C
            - /etc/collectd/collectd.conf
            image: "{{ varnish_image_mirrored_to }}"
            imagePullPolicy: IfNotPresent
            name: collectd
            ports:
            - containerPort: 9103
              name: collectd
              protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/varnish
              name: varnish-runtime
            - mountPath: /etc/collectd
              name: collectd-config
            - mountPath: /tmp
              name: metrics-dir
          - command:
            - /usr/local/sbin/vcl-reload-persistent.sh
            env:
            - name: VCLFILE
              value: default.vcl
            - name: INSTANCE
              value: varnishd
            image: "{{ varnish_image_mirrored_to }}"
            imagePullPolicy: IfNotPresent
            name: varnish-reload
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/varnish
              name: varnish-config
            - mountPath: /var/lib/varnish
              name: varnish-runtime
          - command:
            - varnishkafka
            - -S
            - /etc/varnishkafka/varnishkafka.conf
            - -n
            - varnishd
            image: "{{ varnish_image_mirrored_to }}"
            imagePullPolicy: IfNotPresent
            name: varnish-kafka
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/varnishkafka
              name: varnish-kafka-config
            - mountPath: /var/lib/varnish
              name: varnish-runtime
            - mountPath: /tmp
              name: metrics-dir
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: metrics-dir
          - emptyDir: {}
            name: varnish-runtime
          - configMap:
              defaultMode: 420
              name: varnish-varnish-collectd
            name: collectd-config
          - configMap:
              defaultMode: 420
              name: varnish-external-config
            name: varnish-config
          - configMap:
              defaultMode: 420
              name: varnish-varnish-varnishkafka
            name: varnish-kafka-config
      updateStrategy:
        rollingUpdate:
          partition: 0
        type: RollingUpdate
  tags: varnish.statefulset
  vars:
    varnish_cache_volume_prod:
      name: varnish-runtime
      persistentVolumeClaim:
        claimName: varnish-cache
    varnish_cache_volume_test:
      name: varnish-runtime
      emptyDir: {}

- name: Varnish service
  delegate_to: localhost
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: varnish-varnish
      name: varnish-varnish
      namespace: "{{ openshift_namespace }}"
    spec:
      type: ClusterIP
      selector:
        app: varnish-varnish
      ports:
      - name: collectd
        port: 9103
        protocol: TCP
        targetPort: collectd
      - name: http
        port: 8080
        protocol: TCP
        targetPort: http
