- tags: always
  include_vars: "{{ item }}"
  with_items:
      - mgmt-vars.yml
      - ../../../vars/ssh-keys.yml  # Required by mgmt-vars.yml
      - ../../../vars/image-vars.yml              # For mgmt_image_name
      - ../../../vars/wordpress-vars.yml          # For wp_version_lineage
      - "../../../vars/secrets-{{ openshift_namespace }}.yml"
      - ../../../vars/env-secrets.yml             # For env_secrets

- name: "{{ mgmt_ssh_secret_name }} secret (ssh host and user keys)"
  openshift:
    state: latest
    apiVersion: v1
    kind: Secret
    metadata:
      name: "{{ mgmt_ssh_secret_name }}"
      namespace: "{{ openshift_namespace }}"
      labels:
        app: mgmt
    data: "{{ mgmt_ssh_secret_contents }}"
  tags: mgmt.secrets

- name: new-wp-site-env ConfigMap
  openshift:
    state: latest
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: new-wp-site-env
      namespace: "{{ openshift_namespace }}"
    data:
      WP_ADMIN_USER: admin
      WP_ADMIN_EMAIL: test@example.com
      MYSQL_DB_HOST: "{{ mysql_super_credentials.host }}"
      MYSQL_SUPER_USER: "{{ mysql_super_credentials.user }}"
      WP_VERSION: "{{ wp_version_lineage | string }}"

- name: mysql-super-credentials Secret
  openshift:
    state: latest
    apiVersion: v1
    kind: Secret
    metadata:
      name: mysql-super-credentials
      namespace: "{{ openshift_namespace }}"
    type: Opaque
    data: "{{ env_secret_mysql_super_credentials | base64_values }}"
  tags: mgmt.secrets

- name: backup-rw-credentials Secret
  openshift:
    state: latest
    apiVersion: v1
    kind: Secret
    metadata:
      name: backup-rw-credentials
      namespace: "{{ openshift_namespace }}"
    type: Opaque
    data: "{{ env_secret_restic_backup_credentials | base64_values }}"
  tags: mgmt.secrets

- name: mgmt DeploymentConfig
  openshift:
    state: latest
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: mgmt
      namespace: "{{ openshift_namespace }}"
      labels:
        app: mgmt
    spec:
      replicas: 1
      selector:
        app: mgmt
        deploymentconfig: mgmt
      template:
        metadata:
          labels:
            app: mgmt
            deploymentconfig: mgmt
        spec:
          containers:
          - name: mgmt
            imagePullPolicy: Always
            ports:
            - containerPort: 22
              protocol: TCP
            volumeMounts:
            - name: srv
              mountPath: /srv
            - name: ssh
              mountPath: /var/lib/secrets/ssh
            - name: backups
              mountPath: /backups
            envFrom:
              - configMapRef:
                  name: new-wp-site-env
              - secretRef:
                  name: mysql-super-credentials
              - secretRef:
                  name: backup-rw-credentials
          serviceAccount: "{{ mgmt_service_account }}"
          serviceAccountName: "{{ mgmt_service_account }}"
          volumes:
          - name: srv
            persistentVolumeClaim:
              claimName: wordpress-0
          - name: ssh
            secret:
              secretName: "{{ mgmt_ssh_secret_name }}"
          - >-
            {{ { "name": "backups",
                 "persistentVolumeClaim": {"claimName": "backups-0"} }
               if openshift_is_production
               else { "name": "backups", "emptydir": {} }
            }}
      triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - mgmt
          from:
            kind: ImageStreamTag
            name: "{{ mgmt_image_name }}:{{ openshift_registry_tag }}"
            namespace: "{{ openshift_namespace }}"
