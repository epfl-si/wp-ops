- tags: always
  include_vars: "{{ item }}"
  with_items:
    - ../../../vars/quay-vars.yml
    - mirrors-vars.yml
    - s3-vars.yml
    - build-vars.yml

- tags: always
  include_vars:
    name: runner_credentials
    file: ../../vars/runner-credentials.yml

- name: "build-toolbox on {{ ansible_quay_hostname }}"
  run_once: true
  epfl_si.quay.quay_repository:
    name: "build-toolbox"
    organization: "{{ quay_organization }}"
    description: "Image with git, jq, bash etc. for build-related tasks"
    visibility: public

- name: "Access matrix to {{ ansible_quay_hostname }}/{{ quay_organization }}/build-toolbox:latest"
  run_once: true
  epfl_si.quay.robot_account_permission:
    robot_account_name: "{{ item.robot_account }}"
    organization: "{{ quay_organization }}"
    repository_name: "build-toolbox"
    permission: "{{ item.permission }}"
  with_items:
    - robot_account: "{{ builder_robot_account_name }}"
      permission: write
    - robot_account: "{{ quay_puller_robot_account_name }}"
      permission: read

- name: "`BuildConfig/build-toolbox`"
  register: _toolbox_buildconfig
  kubernetes.core.k8s:
    definition:
      apiVersion: build.openshift.io/v1
      kind: BuildConfig
      metadata:
        name: build-toolbox
        namespace: "{{ inventory_namespace }}"
      spec:
        source:
          type: Git
          git:
            uri: "https://github.com/epfl-si/wp-ops"
            ref: "feature/wp-base-cloud-tekton-build"   # TODO: remove upon merging
          contextDir: docker/build-toolbox
        strategy:
          type: Docker
          dockerStrategy:
            from:   # Override the Dockerfile's `FROM` line
              kind: DockerImage
              name: "{{ ansible_quay_hostname }}/{{ quay_organization }}/ubuntu:noble"
        output:
          to:
            kind: DockerImage
            name: "{{ build_toolbox_image }}"
        serviceAccount: builder
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"

- name: Build build-toolbox now
  tags:
    - wp.toolbox.rebuild
    - wp.build.toolbox.rebuild
  when: >-
    (_toolbox_buildconfig | default({}) is changed)
    or
    ("wp.toolbox.rebuild" in ansible_run_tags)
    or
    ("wp.build.toolbox.rebuild" in ansible_run_tags)
  shell:
    cmd: |
      set -e -x
      export KUBECONFIG=$K8S_AUTH_KUBECONFIG
      oc -n {{ inventory_namespace }} start-build --wait build-toolbox
