- tags: always
  include_vars: "{{ item }}"
  with_items:
    - ../../vars/versions.yml
    - build-vars.yml
    - quay-vars.yml
    - mirrors-vars.yml
    - continuous-integration-vars.yml

- tags: always
  include_vars:
    file: github-credentials.yml
    name: github_credentials

- name: "`Secret/wp-ci-github`"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: wp-ci-github
        namespace: "{{ inventory_namespace }}"
      type: Opaque
      stringData:
        APP_ID: "{{ github_credentials.id | string }}"
        PRIVATE_KEY: "{{ github_credentials.private_key | eyaml(github_credentials.eyaml_keys) }}"

- name: "Mirror the Node:22-alpine base image"
  run_once: true
  epfl_si.quay.quay_repository:
    name: "node"
    organization: "{{ quay_organization }}"
    description: "Mirrored from Node:22-alpine"
    visibility: public
    mirror:
      from: "docker.io/library/node:22-alpine"
      robot_account: "{{ mirrorist_quay_robot_account }}"
      tags: ["22-alpine"]

- name: "wp-continuous-integration on {{ ansible_quay_hostname }}"
  run_once: true
  epfl_si.quay.quay_repository:
    name: "wp-continuous-integration"
    organization: "{{ quay_organization }}"
    description: "Image with node for wp-continuous-integration"
    visibility: public

- name: "Access matrix to {{ ansible_quay_hostname }}/{{ quay_organization }}/wp-continuous-integration:latest"
  run_once: true
  epfl_si.quay.robot_account_permission:
    robot_account_name: "{{ item.robot_account }}"
    organization: "{{ quay_organization }}"
    repository_name: "wp-continuous-integration"
    permission: "{{ item.permission }}"
  with_items:
    - robot_account: "{{ builder_robot_account_name }}"
      permission: write
    - robot_account: "{{ quay_puller_robot_account_name }}"
      permission: read

- name: "`BuildConfig/wp-continuous-integration`"
  register: _tekton_wp_ci_buildconfig
  kubernetes.core.k8s:
    definition:
      apiVersion: build.openshift.io/v1
      kind: BuildConfig
      metadata:
        name: wp-continuous-integration
        namespace: "{{ inventory_namespace }}"
      spec:
        source:
          type: Git
          git:
            uri: "https://github.com/epfl-si/wp-continuous-integration"
        strategy:
          type: Docker
          dockerStrategy:
            from:   # Override the Dockerfile's `FROM` line
              kind: DockerImage
              name: "{{ ansible_quay_hostname }}/{{ quay_organization }}/node:22-alpine"
        output:
          to:
            kind: DockerImage
            name: "{{ ansible_quay_hostname }}/{{ quay_organization }}/wp-continuous-integration:latest"
        serviceAccount: builder
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"

- name: Build wp-continuous-integration now
  tags: wp.continuous-integration.rebuild
  when: >-
    (_tekton_wp_ci_buildconfig | default({}) is changed)
    or "wp.continuous-integration.rebuild" in ansible_run_tags
  shell:
    cmd: |
      set -e -x
      export KUBECONFIG=$K8S_AUTH_KUBECONFIG
      oc -n {{ inventory_namespace }} start-build --wait wp-continuous-integration
  register: _wp_continuous_integration_build

- name: ConfigMap/wp-continuous-integration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: wp-continuous-integration
        namespace: "{{ inventory_namespace }}"
      data:
        wp-continuous-integration-config.yaml: |
          REPOSITORIES:
            - wp-mu-plugins
            - wp-theme-2018
            - wp-plugin-epfl-coming-soon
            - wordpress.plugin.tequila
            - wp-plugin-epfl-settings
            - wp-plugin-epfl-remote-content
            - wp-plugin-epfl-content-filter
            - wp-plugin-enlighter
            - wp-plugin-epfl-intranet
            - wp-plugin-epfl-library
            - wp-plugin-epfl-diploma-verification
            - wp-plugin-epfl-partner-universities
            - wp-plugin-epfl-404
            - wp-gutenberg-epfl
            - wp-plugin-epfl-courses-se
            - wp-plugin-epfl-restauration
            - wp-plugin-epfl-cache-control
            - wordpress.plugin.accred
            - wp-plugin-epfl-translate
            - wp-plugin-epfl-menus
            - wp-plugin-pushgateway
          DEBUG: {{ _debug }}
          NAMESPACE: "svc0041t-wordpress"
  vars:
    _debug: >-
      {{ false if inventory_deployment_stage == "production"
      else true }}
  register: _wp_continuous_integration_configmap

- name: Deployment/wp-continuous-integration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: wp-continuous-integration
        namespace: "{{ inventory_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: wp-continuous-integration
        template:
          metadata:
            labels:
              app: wp-continuous-integration
          spec:
            serviceAccountName: wp-continuous-integration
            containers:
              - name: wp-continuous-integration
                image: "quay-its.epfl.ch/svc0041/wp-continuous-integration:latest"
                command:
                  - /app/node_modules/.bin/tsx
                  - src/index.ts
                  - -p
                  - /config/wp-continuous-integration-config.yaml
                  - --privileged-service-account
                  - "{{ wp_base_builder_buildah_service_account }}"
                  - --unprivileged-service-account
                  - "{{ build_service_account }}"
                imagePullPolicy: Always
                resources:
                  limits:
                    memory: 512Mi
                  requests:
                    cpu: '{{ _cpu_request }}'
                    memory: 512Mi
                volumeMounts:
                  - name: wp-continuous-integration
                    mountPath: /config/
            volumes:
              - name: wp-continuous-integration
                configMap:
                  name: wp-continuous-integration
            imagePullSecrets:
              - name: "{{ quay_puller_secret_name }}"
  vars:
    _cpu_request: "160m"
  register: _wp_continuous_integration_deployment

- tags: wp.continuous-integration.restart
  when: >-
    (
      (
        (_wp_continuous_integration_configmap | default({}) is changed)
        or
        (_wp_continuous_integration_build | default({}) is changed)
      )
      and not
      (_wp_continuous_integration_deployment | default({}) is changed)
    )
    or ("wp.continuous-integration.restart" in ansible_run_tags)
  name: "Redeploy wp-continuous-integration"
  shell:
    cmd: |
      set -e -x
      export KUBECONFIG=$K8S_AUTH_KUBECONFIG
      kubectl -n {{ inventory_namespace }} rollout restart deploy/wp-continuous-integration

- name: ServiceAccount/wp-continuous-integration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: wp-continuous-integration
        namespace: "{{ inventory_namespace }}"

- name: Role/wp-continuous-integration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: wp-continuous-integration
        namespace: "{{ inventory_namespace }}"
      rules:
        - apiGroups: ['tekton.dev']
          resources:
            - pipelineruns
          verbs: ['create', 'delete', 'deletecollection', 'patch', 'update', 'get', 'list', 'watch']
        - apiGroups: ['']
          resources:
            - persistentvolumeclaims
          verbs: ['create', 'delete', 'deletecollection', 'patch', 'update', 'get', 'list', 'watch']
        - apiGroups: ['']
          resources:
            - secrets
          resourceNames:
            - wp-ci-github
          verbs: ['get', 'list', 'watch']
        - apiGroups: ['apps']
          resources:
            - replicasets
            - deployments
          verbs: ['get', 'list', 'watch']

- name: RoleBinding/wp-continuous-integration
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: wp-continuous-integration
        namespace: "{{ inventory_namespace }}"
      subjects:
        - kind: ServiceAccount
          name: wp-continuous-integration
          namespace: "{{ inventory_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: wp-continuous-integration
