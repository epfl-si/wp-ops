# Backup a WordPress instance to EPFL's Scality system through its S3-like API

- run_once: true
  assert:
    that: >-
      ansible_verbosity <= 2
    msg: >-
      Don't use -vvv or higher when backing up or restoring sites (risk
      of disclosure of the Scality access credentials)

- include_vars: "{{ item }}"
  with_items:
    - backup-vars.yml
    - ../../wordpress-openshift-namespace/vars/monitoring-vars.yml
    - ../../../vars/env-secrets.yml                          # Used in backup-vars.yml
    - "../../../vars/secrets-{{ openshift_namespace }}.yml"  # Used in env-secrets.yml

- name: Backup
  timeout: "{{ backup_timeout_seconds }}"
  environment: "{{ backup_restic_environment }}"    # `-vv`-safe!
  shell:
    executable: /bin/bash
    cmd: |
      {{ backup_bash_stop_on_any_errors }}

      {% if backup_has_monitoring %}
      echo "restic_start{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"} $(date +%s)" \
      | {{ backup_curl_to_pushgateway_cmd }}
      {% endif %}

      for repo in "{{ backup_restic_repo_files }}" "{{ backup_restic_repo_sql }}"; do
        {{ backup_restic_cmd }} -r $repo init || true
        {{ backup_restic_cmd }} -r $repo unlock
      done

      cd {{ wp_dir }}

      # Back up files
      declare -a excludes
      for subwp in $(find . -mindepth 2 -maxdepth 2 -name wp-config.php); do
        excludes+=(--exclude "$(dirname $subwp)/")
      done
      files_snapshot_id=$(
        {{ backup_bash_stop_on_any_errors }}
        {{ backup_restic_cmd }} -r {{ backup_restic_repo_files }} backup "${excludes[@]}" --json . \
        | jq -r -s 'last(.[] | select(.message_type == "summary")) | .snapshot_id'
      )

      # Back up MySQL database to a distinct restic depot (making metadata
      # management that much simpler)
      if [ -f wp-config.php ]; then
        sql_snapshot_id=$(
          {{ backup_bash_stop_on_any_errors }}
          {{ backup_db_to_stdout_command }} \
          | {{ backup_restic_cmd }} -r {{ backup_restic_repo_sql }} backup \
                --stdin --stdin-filename db-backup.sql \
                --json \
          | jq -r -s 'last(.[] | select(.message_type == "summary")) | .snapshot_id'
        )
      fi

      # Move tags forward
      date_short="$(date +%Y%m%d)"
      date_full="$(date +%Y%m%d-%H%M%S)"
      {{ backup_restic_cmd }} -r {{ backup_restic_repo_files }} tag \
        --remove latest --remove "$date_short" --remove "$date_full"
      {{ backup_restic_cmd }} -r {{ backup_restic_repo_files }} tag "$files_snapshot_id" \
        --add latest --add "$date_short" --add "$date_full"
      if [ -f wp-config.php ]; then
        {{ backup_restic_cmd }} -r {{ backup_restic_repo_sql }} tag \
          --remove latest --remove "$date_short" --remove "$date_full"
        {{ backup_restic_cmd }} -r {{ backup_restic_repo_sql }} tag "$sql_snapshot_id" \
          --add latest --add "$date_short" --add "$date_full"
      fi

      {% if backup_has_monitoring %}
      echo "restic_success{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"} $(date +%s)" | \
        {{ backup_curl_to_pushgateway_cmd }}
      # Collect additional stats to pushgateway.
      (
        {{ backup_bash_stop_on_any_errors }}
        {{ backup_restic_cmd }} -r {{ backup_restic_repo_files }} stats --mode restore-size --json latest \
        | jq -r '. as $initial_data | keys | map(["restic_files_" + . + "{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"}", $initial_data[.]]) | .[] | @tsv'
        if [ -f wp-config.php ]; then
          {{ backup_restic_cmd }} -r {{ backup_restic_repo_sql }} stats --mode restore-size --json latest \
          | jq -r '. as $initial_data | keys | map(["restic_sql_" + . + "{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"}", $initial_data[.]]) | .[] | @tsv'
        fi
      ) | {{ backup_curl_to_pushgateway_cmd }}

      (
        {{ backup_bash_stop_on_any_errors }}
        # Re-use the same vocabulary for the variable names as the output of restic --json, i.e. ..._total_size and
        # ..._total_file_count
        echo -n "s3_backup_files_total_size{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"} "; \
           {{ backup_aws_s3api_list_cmd }} --prefix {{ backup_aws_s3_prefix }}/files | {{ backup_aws_s3api_jq_sum_cmd }}
        echo -n "s3_backup_sql_total_size{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"} "; \
           {{ backup_aws_s3api_list_cmd }} --prefix {{ backup_aws_s3_prefix }}/sql | {{ backup_aws_s3api_jq_sum_cmd }}
        echo -n "s3_backup_files_total_file_count{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"} "; \
           {{ backup_aws_s3api_list_cmd }} --prefix {{ backup_aws_s3_prefix }}/files | {{ backup_aws_s3api_jq_count_cmd }}
        echo -n "s3_backup_sql_total_file_count{url=\"{{ backup_url_label }}\", wp_env=\"{{ wp_env }}\"} "; \
           {{ backup_aws_s3api_list_cmd }} --prefix {{ backup_aws_s3_prefix }}/sql | {{ backup_aws_s3api_jq_count_cmd }}
      ) | {{ backup_curl_to_pushgateway_cmd }}
      {% endif %}

  changed_when: true
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"
