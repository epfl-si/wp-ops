#cloud-config
autoinstall:
  version: 1
  locale: en_US.UTF-8
  timezone: "Europe/Zurich"
  keyboard:
    layout: ch
    variant: "fr"
    toggle: null

  refresh-installer:
    update: false

  source:
    id: ubuntu-server-minimal

  # user-data:
  #   disable_root: false
  #   users:
  #     - name: ubuntu
  #       sudo: "ALL=(ALL) NOPASSWD:ALL"
  #       password: "$6$exDY1mhS4KUYCE/2$zmn9ToZwTKLhCw.b4/b.ZRTIZM30JZ4QrOQ2aOXJ8yk96xpcCof0kxKwuX1kqLG/ygbJ1f8wxED22bTL4F46P0"
  #       ssh_import_id:
  #         - gh:azecko
  #         - gh:d4rkheart
  #         - gh:domq
  #         - gh:dragonleman
  #         - gh:dwesh163
  #         - gh:Jch4ipas
  #         - gh:jdelasoie
  #         - gh:lvenries
  #         - gh:multiscan
  #         - gh:obieler
  #         - gh:ponsfrilus
  #         - gh:rosamaggi
  #         - gh:saskyapanchaud

  identity:
    # password is ubuntu and will be changed as soon as ansible runs (hopefully)
    hostname: ubuntu-server
    password: "$6$exDY1mhS4KUYCE/2$zmn9ToZwTKLhCw.b4/b.ZRTIZM30JZ4QrOQ2aOXJ8yk96xpcCof0kxKwuX1kqLG/ygbJ1f8wxED22bTL4F46P0"
    username: ubuntu
    realname: 'The useless Ubuntu User'

  ssh:
    install-server: true
    allow-pw: false

  # commands that are executed even before /target is mounted
  # here we might need to manually config the network for installation to work
  # It would be probably nicer to have an http server with the config part
  # so that if we configure the network manually here we can go fetch the
  # config without having to burn the CD each time we add a new server.
  # early-commands:
  #   - touch /run/continue && while [ -f /run/continue ]; do sleep 1; done

  # runcmd (commands that run at first boot) might do the job too
  late-commands:
    - |
      eth0=$(ls -1 /sys/class/net | grep -v -e lo -e cali)
      MAC=$(ip link show dev ${eth0} | awk '/ether/ {print $2}')
      echo "detected MAC address $MAC"
      hd=/cdrom/config/hosts/$MAC
      if [ -d $hd ] ; then
        echo "Using configuration for MAC $MAC"
        if [ -d $hd/ssh ] ; then
          cp $hd/ssh/* /target/etc/ssh/
          chmod 0600 /target/etc/ssh/*_key*
          chmod 0644 /target/etc/ssh/*_key.pub
        fi
        if [ -f $hd/hostname ] ; then
          hn=$(cat $hd/hostname)
          hostnamectl set-hostname $hn
        fi
      else 
        echo "Configuration for MAC $MAC not found. Using Generic configuration"
        hd=/cdrom/config/hosts/generic
      fi
      # disable automatic network config so that /etc/netplan/50-cloud-init.yaml is not rewritten
      [ -f /target/etc/netplan/90-installer-network.cfg ] && rm /target/etc/netplan/90-installer-network.cfg
      echo "network: {config: disabled}" > /target/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
      cp $hd/50-cloud-init.yaml /target/etc/netplan/50-cloud-init.yaml

      if [ -f /cdrom/config/authorized_keys ] ; then
        [ -d /target/root/.ssh ] || mkdir /target/root/.ssh
        cp /cdrom/config/authorized_keys /target/root/.ssh/
        chmod 0700 /target/root/.ssh
        chmod 0600 /target/root/.ssh/authorized_keys
      fi
